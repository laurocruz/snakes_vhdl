|demo_size_counter
reset => size_counter:size_counter1.reset
food_pos[0] => size_counter:size_counter1.food_pos[0]
food_pos[1] => size_counter:size_counter1.food_pos[1]
food_pos[2] => size_counter:size_counter1.food_pos[2]
food_pos[3] => size_counter:size_counter1.food_pos[3]
food_pos[4] => size_counter:size_counter1.food_pos[4]
food_pos[5] => size_counter:size_counter1.food_pos[5]
food_pos[6] => size_counter:size_counter1.food_pos[6]
snake_size[0] <= size_counter:size_counter1.snake_size[0]
snake_size[1] <= size_counter:size_counter1.snake_size[1]
snake_size[2] <= size_counter:size_counter1.snake_size[2]
snake_size[3] <= size_counter:size_counter1.snake_size[3]
snake_size[4] <= size_counter:size_counter1.snake_size[4]
snake_size[5] <= size_counter:size_counter1.snake_size[5]
snake_size[6] <= size_counter:size_counter1.snake_size[6]
eaten <= size_counter:size_counter1.eaten


|demo_size_counter|size_counter:size_counter1
reset => size[0].ACLR
reset => size[1].PRESET
reset => size[2].ACLR
reset => size[3].ACLR
reset => size[4].ACLR
reset => size[5].ACLR
reset => size[6].ACLR
food_pos[0] => Equal0.IN8
food_pos[1] => Equal0.IN7
food_pos[2] => Equal0.IN6
food_pos[3] => Equal0.IN5
food_pos[4] => Equal0.IN4
food_pos[5] => Equal0.IN3
food_pos[6] => Equal0.IN2
food_pos[7] => Equal0.IN1
food_pos[8] => Equal0.IN0
snake_head[0] => Equal0.IN17
snake_head[1] => Equal0.IN16
snake_head[2] => Equal0.IN15
snake_head[3] => Equal0.IN14
snake_head[4] => Equal0.IN13
snake_head[5] => Equal0.IN12
snake_head[6] => Equal0.IN11
snake_head[7] => Equal0.IN10
snake_head[8] => Equal0.IN9
snake_size[0] <= size[0].DB_MAX_OUTPUT_PORT_TYPE
snake_size[1] <= size[1].DB_MAX_OUTPUT_PORT_TYPE
snake_size[2] <= size[2].DB_MAX_OUTPUT_PORT_TYPE
snake_size[3] <= size[3].DB_MAX_OUTPUT_PORT_TYPE
snake_size[4] <= size[4].DB_MAX_OUTPUT_PORT_TYPE
snake_size[5] <= size[5].DB_MAX_OUTPUT_PORT_TYPE
snake_size[6] <= size[6].DB_MAX_OUTPUT_PORT_TYPE
eaten <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


